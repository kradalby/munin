---
{
   "kind": "pipeline",
   "name": "Docker build",
   "node_selector": {
      "drone": true
   },
   "steps": [
      {
         "commands": [
            "npm install prettier",
            "npx prettier --check \"**/*.{ts,js,md,yaml,yml,sass,css,scss}\""
         ],
         "image": "node:lts",
         "name": "Prettier lint",
         "pull": "always"
      },
      {
         "commands": [
            "git clone -b swift-5.2-branch https://github.com/apple/swift-format.git /tmp/swift-format",
            "cd /tmp/swift-format",
            "swift build --configuration release",
            "cd -",
            "/tmp/swift-format/.build/release/swift-format -m lint"
         ],
         "image": "swift:latest",
         "name": "Swift lint",
         "pull": "always"
      },
      {
         "environment": {
            "DOCKER_BUILDKIT": 1
         },
         "image": "plugins/docker",
         "name": "Build container image",
         "pull": "always",
         "trigger": {
            "event": [
               "pull_request"
            ]
         },
         "when": {
            "branch": {
               "exclude": [
                  "master"
               ]
            }
         }
      },
      {
         "environment": {
            "DOCKER_BUILDKIT": 1
         },
         "image": "plugins/docker",
         "name": "Publish image kradalby/munin",
         "pull": "always",
         "settings": {
            "password": {
               "from_secret": "docker_password"
            },
            "repo": "kradalby/munin",
            "tags": [
               "latest",
               "${DRONE_COMMIT_SHA:0:8}"
            ],
            "username": {
               "from_secret": "docker_username"
            }
         },
         "when": {
            "branch": [
               "master"
            ],
            "event": [
               "push"
            ]
         }
      },
      {
         "image": "appleboy/drone-discord",
         "name": "Notify Discord",
         "pull": "always",
         "settings": {
            "message": "{{#success build.status}}\n‚úÖ  Build #{{build.number}} of `{{repo.name}}` succeeded.\n\nüìù  Commit by {{commit.author}} on `{{commit.branch}}`:\n``` {{commit.message}} ```\nüåê  {{ build.link }}\n\n‚úÖ  duration: {{duration build.started build.finished}}\n‚úÖ  started: {{datetime build.started \"2006/01/02 15:04\" \"UTC\"}}\n‚úÖ  finished: {{datetime build.finished \"2006/01/02 15:04\" \"UTC\"}}\n\n{{else}}\n@everyone\n‚ùå  Build #{{build.number}} of `{{repo.name}}` failed.\n\nüìù  Commit by {{commit.author}} on `{{commit.branch}}`:\n``` {{commit.message}} ```\nüåê  {{ build.link }}\n\n‚úÖ  duration: {{duration build.started build.finished}}\n‚úÖ  started: {{datetime build.started \"2006/01/02 15:04\" \"UTC\"}}\n‚úÖ  finished: {{datetime build.finished \"2006/01/02 15:04\" \"UTC\"}}\n\n{{/success}}\n",
            "webhook_id": {
               "from_secret": "discord_webhook_id"
            },
            "webhook_token": {
               "from_secret": "discord_webhook_token"
            }
         },
         "when": {
            "status": [
               "success",
               "failure"
            ]
         }
      }
   ],
   "type": "kubernetes"
}
---
{
   "kind": "pipeline",
   "name": "Swift build",
   "node_selector": {
      "drone": true
   },
   "steps": [
      {
         "commands": [
            "npm install prettier",
            "npx prettier --check \"**/*.{ts,js,md,yaml,yml,sass,css,scss}\""
         ],
         "image": "node:lts",
         "name": "Prettier lint",
         "pull": "always"
      },
      {
         "commands": [
            "git clone -b swift-5.2-branch https://github.com/apple/swift-format.git /tmp/swift-format",
            "cd /tmp/swift-format",
            "swift build --configuration release",
            "cd -",
            "/tmp/swift-format/.build/release/swift-format -m lint"
         ],
         "image": "swift:latest",
         "name": "Swift lint",
         "pull": "always"
      },
      {
         "commands": [
            "make test",
            "make build"
         ],
         "image": "kradalby/swift:groovy",
         "name": "Swift build",
         "pull": "always"
      },
      {
         "commands": [
            "make test",
            "make build-release",
            "mkdir -p dist/",
            "mv .build/release/munin dist/"
         ],
         "image": "kradalby/swift:groovy",
         "name": "Swift release",
         "pull": "always",
         "when": {
            "branch": [
               "master"
            ],
            "event": [
               "push"
            ]
         }
      },
      {
         "environment": {
            "SSH_KEY": {
               "from_secret": "ssh_key"
            }
         },
         "image": "appleboy/drone-scp",
         "name": "Deploy to builds",
         "pull": "always",
         "settings": {
            "host": "storage.terra.fap.no",
            "rm": true,
            "source": [
               "dist/*"
            ],
            "strip_components": 1,
            "target": "/storage/serve/builds/munin/linux_x64",
            "username": "deploy"
         },
         "when": {
            "branch": [
               "master"
            ],
            "event": [
               "push"
            ]
         }
      },
      {
         "image": "appleboy/drone-discord",
         "name": "Notify Discord",
         "pull": "always",
         "settings": {
            "message": "{{#success build.status}}\n‚úÖ  Build #{{build.number}} of `{{repo.name}}` succeeded.\n\nüìù  Commit by {{commit.author}} on `{{commit.branch}}`:\n``` {{commit.message}} ```\nüåê  {{ build.link }}\n\n‚úÖ  duration: {{duration build.started build.finished}}\n‚úÖ  started: {{datetime build.started \"2006/01/02 15:04\" \"UTC\"}}\n‚úÖ  finished: {{datetime build.finished \"2006/01/02 15:04\" \"UTC\"}}\n\n{{else}}\n@everyone\n‚ùå  Build #{{build.number}} of `{{repo.name}}` failed.\n\nüìù  Commit by {{commit.author}} on `{{commit.branch}}`:\n``` {{commit.message}} ```\nüåê  {{ build.link }}\n\n‚úÖ  duration: {{duration build.started build.finished}}\n‚úÖ  started: {{datetime build.started \"2006/01/02 15:04\" \"UTC\"}}\n‚úÖ  finished: {{datetime build.finished \"2006/01/02 15:04\" \"UTC\"}}\n\n{{/success}}\n",
            "webhook_id": {
               "from_secret": "discord_webhook_id"
            },
            "webhook_token": {
               "from_secret": "discord_webhook_token"
            }
         },
         "when": {
            "status": [
               "success",
               "failure"
            ]
         }
      }
   ],
   "type": "kubernetes"
}
---
{
   "get": {
      "name": "id",
      "path": "discord-build"
   },
   "kind": "secret",
   "name": "discord_webhook_id"
}
---
{
   "get": {
      "name": "token",
      "path": "discord-build"
   },
   "kind": "secret",
   "name": "discord_webhook_token"
}
---
{
   "get": {
      "name": "username",
      "path": "docker"
   },
   "kind": "secret",
   "name": "docker_username"
}
---
{
   "get": {
      "name": "password",
      "path": "docker"
   },
   "kind": "secret",
   "name": "docker_password"
}
---
{
   "get": {
      "name": "deploy",
      "path": "ssh"
   },
   "kind": "secret",
   "name": "ssh_key"
}
...
